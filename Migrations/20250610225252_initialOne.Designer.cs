// <auto-generated />
using System;
using GymApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymApp.Migrations
{
    [DbContext(typeof(GymManagementContext2))]
    [Migration("20250610225252_initialOne")]
    partial class initialOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymApp.Models.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ID")
                        .HasName("PK__Class__3214EC279EF0D6B6");

                    b.HasIndex(new[] { "ProgramID" }, "IDX_Class_Program");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("GymApp.Models.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Certification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK__Coach__3214EC27AC46CA0E");

                    b.ToTable("Coach");
                });

            modelBuilder.Entity("GymApp.Models.DietPlan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK__DietPlan__3214EC2727E6130F");

                    b.ToTable("DietPlan");
                });

            modelBuilder.Entity("GymApp.Models.InBodyTest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateOnly?>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(CONVERT([date],getdate()))");

                    b.Property<decimal?>("Fats")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("MuscleMass")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TraineeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("ID")
                        .HasName("PK__InBodyTe__3214EC273F6719C6");

                    b.HasIndex(new[] { "TraineeID" }, "IDX_InBodyTest_Trainee");

                    b.ToTable("InBodyTest");
                });

            modelBuilder.Entity("GymApp.Models.MembershipType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ID")
                        .HasName("PK__Membersh__3214EC27A1C99DD9");

                    b.ToTable("MembershipType");
                });

            modelBuilder.Entity("GymApp.Models.Program", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID")
                        .HasName("PK__Program__3214EC275666752F");

                    b.HasIndex(new[] { "CoachID" }, "IDX_Program_Coach");

                    b.ToTable("Program");
                });

            modelBuilder.Entity("GymApp.Models.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("ClassID")
                        .HasColumnType("int");

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DOB")
                        .HasColumnType("date");

                    b.Property<int?>("DietPlanID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<DateOnly?>("JoinDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(CONVERT([date],getdate()))");

                    b.Property<int?>("MembershipTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID")
                        .HasName("PK__Trainee__3214EC279E231CF1");

                    b.HasIndex(new[] { "ClassID" }, "IDX_Trainee_Class");

                    b.HasIndex(new[] { "CoachID" }, "IDX_Trainee_Coach");

                    b.HasIndex(new[] { "DietPlanID" }, "IDX_Trainee_DietPlan");

                    b.HasIndex(new[] { "MembershipTypeID" }, "IDX_Trainee_MembershipType");

                    b.ToTable("Trainee");
                });

            modelBuilder.Entity("GymApp.Models.Class", b =>
                {
                    b.HasOne("GymApp.Models.Program", "Program")
                        .WithMany("Classes")
                        .HasForeignKey("ProgramID")
                        .HasConstraintName("FK__Class__ProgramID__44FF419A");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("GymApp.Models.InBodyTest", b =>
                {
                    b.HasOne("GymApp.Models.Trainee", "Trainee")
                        .WithMany("InBodyTests")
                        .HasForeignKey("TraineeID")
                        .HasConstraintName("FK__InBodyTes__Train__48CFD27E");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("GymApp.Models.Program", b =>
                {
                    b.HasOne("GymApp.Models.Coach", "Coach")
                        .WithMany("Programs")
                        .HasForeignKey("CoachID")
                        .HasConstraintName("FK__Program__CoachID__4222D4EF");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("GymApp.Models.Trainee", b =>
                {
                    b.HasOne("GymApp.Models.Class", "Class")
                        .WithMany("Trainees")
                        .HasForeignKey("ClassID")
                        .HasConstraintName("FK__Trainee__ClassID__4AB81AF0");

                    b.HasOne("GymApp.Models.Coach", "Coach")
                        .WithMany("Trainees")
                        .HasForeignKey("CoachID")
                        .HasConstraintName("FK__Trainee__CoachID__4BAC3F29");

                    b.HasOne("GymApp.Models.DietPlan", "DietPlan")
                        .WithMany("Trainees")
                        .HasForeignKey("DietPlanID")
                        .HasConstraintName("FK__Trainee__DietPla__49C3F6B7");

                    b.HasOne("GymApp.Models.MembershipType", "MembershipType")
                        .WithMany("Trainees")
                        .HasForeignKey("MembershipTypeID")
                        .HasConstraintName("FK__Trainee__Members__3F466844");

                    b.Navigation("Class");

                    b.Navigation("Coach");

                    b.Navigation("DietPlan");

                    b.Navigation("MembershipType");
                });

            modelBuilder.Entity("GymApp.Models.Class", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymApp.Models.Coach", b =>
                {
                    b.Navigation("Programs");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymApp.Models.DietPlan", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymApp.Models.MembershipType", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymApp.Models.Program", b =>
                {
                    b.Navigation("Classes");
                });

            modelBuilder.Entity("GymApp.Models.Trainee", b =>
                {
                    b.Navigation("InBodyTests");
                });
#pragma warning restore 612, 618
        }
    }
}
